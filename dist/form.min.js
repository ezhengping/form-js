/** 
* FormJS - v0.2.1.
* https://github.com/mkay581/formjs.git
* Copyright 2015. Licensed MIT.
*/
!function(a){"use strict";"function"==typeof define&&define.amd?define(["underscore","element-kit"],function(b){return a(b)}):a(window._)}(function(a){"use strict";function b(){if("Microsoft Internet Explorer"!=navigator.appName)return!1;var a=navigator.userAgent,b=new RegExp("MSIE ([0-9]{1,}[.0-9]{0,})");return null!=b.exec(a)?parseInt(RegExp.$1):void 0}var c=function(a){this.initialize(a)};c.prototype={initialize:function(){},getFormElement:function(){return this.el},getUIElement:function(){return this.getFormElement()},getFormElements:function(){return[this.getFormElement()]},getValue:function(){return this.getFormElement().value},getUIElements:function(){return[this.getUIElement()]},enable:function(){this.getFormElement().disabled=!1},disable:function(){this.getFormElement().disabled=!0},getElementKey:function(){return"element"},destroy:function(){}};var d=function(a){this.options=a,this._setupEvents()};d.prototype={_setupEvents:function(){var a;for(this.eventEls=this.options.el.elements,a=0;a<this.eventEls.length;a++)this.eventEls[a].kit.addEventListener("change","_onValueChange",this)},_onValueChange:function(a){this.options.onValueChange&&this.options.onValueChange(a)},disable:function(){this.setPropertyAll("disabled",!0)},enable:function(){this.setPropertyAll("disabled",!1)},setPropertyAll:function(a,b){var c,d=this.options.el.elements;for(c=0;c<d.length;c++)d[c][a]=b},getCurrentValues:function(){var a,b,c,d=[],e=this.options.el.querySelectorAll("[name]"),f=e.length;for(a=0;f>a;a++)b=e[a],b.name&&(c={name:b.name,value:b.value},d.push(c));return d},destroy:function(){var a;for(a=0;a<this.eventEls.length;a++)this.eventEls[a].kit.removeEventListener("change","_onValueChange",this)}};var e=function(a){this.initialize(a)};e.prototype=a.extend({},c.prototype,{initialize:function(b){this.options=a.extend({inputs:[],onChange:null,containerClass:"ui-button-toggle",inputClass:"ui-button-toggle-input",selectedClass:"ui-button-toggle-selected",disabledClass:"ui-button-toggle-disabled"},b),c.prototype.initialize.call(this,this.options),this._container=this.options.container,!this.options.inputs.length&&this._container&&(this.options.inputs=this._container.querySelectorAll("input")),this.options.inputs.length?(this._formElements=Array.prototype.slice.call(this.options.inputs),this._UIElements=this._buildUIElements(this._formElements)):console.error("could not build toggle items: no toggle input items were passed"),this.setup()},setup:function(){this._triggerAll(function(a){a.kit.classList.add(this.options.inputClass)}.bind(this)),this._setupEvents()},_setupEvents:function(){this._triggerAll(function(a){a.kit.addEventListener("click","_onFormElementClick",this)}.bind(this))},getFormElements:function(){return this._formElements},getUIElements:function(){return this._UIElements},_triggerAll:function(a){var b,c=this.getFormElements(),d=this.getUIElements();for(b=0;b<c.length;b++)a(c[b],d[b],b)},_onFormElementClick:function(a){var b=a.currentTarget.getElementsByClassName(this.options.inputClass)[0],c=a.currentTarget.getElementsByClassName(this.options.containerClass)[0];a.currentTarget===a.target&&(b=a.target,c=a.target.parentElement,this._delegateClick(b,c))},_delegateClick:function(a,b){this.isRadio()?this._processRadioClick(a,b):this._processCheckboxClick(a,b)},_processRadioClick:function(a,b){this._lastRadioClicked!==a&&(this._triggerAll(function(a,b){b.kit.classList.remove(this.options.selectedClass),a.checked=!1}.bind(this)),this._onToggleSelect(a,b),this._lastRadioClicked=a)},_processCheckboxClick:function(a,b){b.kit.classList.contains(this.options.selectedClass)?this._onToggleDeselect(a,b):this._onToggleSelect(a,b)},_onToggleSelect:function(a,b){a.checked=!0,b.kit.classList.add(this.options.selectedClass),this._triggerChange(a,b)},_onToggleDeselect:function(a,b){a.checked=!1,b.kit.classList.remove(this.options.selectedClass),this._triggerChange(a,b)},_buildUIElements:function(a){var b,c,d,e=a.length,f=[];for(b=0;e>b;b++)c=a[b],d=c.kit.appendOuterHtml('<div class="'+this.options.containerClass+'"></div>'),c.checked&&d.kit.classList.add(this.options.selectedClass),c.disabled&&d.kit.classList.add(this.options.disabledClass),f.push(d);return f},isRadio:function(){return"radio"===this.getFormElements()[0].getAttribute("type")},_triggerChange:function(a,b){this.options.onChange&&this.options.onChange(a.value,a,b)},select:function(a){var b=this.getFormElement(a),c=this.getUIElement(a);b.checked||(b.checked=!0,c.kit.classList.add(this.options.selectedClass),this._triggerChange(b,c)),this.isRadio()&&this._triggerAll(function(a,b,c){a.checked||this.deselect(c)}.bind(this))},getValue:function(){var a=this.getFormElements().filter(function(a){return a.checked},this);return a.length?a[0].value:""},deselect:function(a){var b=this.getFormElement(a),c=this.getUIElement(a);c.kit.classList.remove(this.options.selectedClass),b.checked&&(b.checked=!1,this._triggerChange(b,c))},getFormElement:function(a){return this.getFormElements()[a||0]},getUIElement:function(a){return this.getUIElements()[a||0]},enable:function(){this._triggerAll(function(a,b){a.disabled=!1,b.kit.classList.remove(this.options.disabledClass)}.bind(this))},disable:function(){this._triggerAll(function(a,b){a.disabled=!0,b.kit.classList.add(this.options.disabledClass)}.bind(this))},getElementKey:function(){return this.isRadio()?"buttonToggleRadio":"buttonToggleCheckbox"},destroy:function(){this._triggerAll(function(a,b){b.parentNode.replaceChild(a,b),a.addEventListener("click","_onFormElementClick",this)}.bind(this)),c.prototype.destroy.call(this)}});var f=function(a){this.initialize(a)};f.prototype=a.extend({},c.prototype,{initialize:function(b){this.options=a.extend({el:null,onChecked:null,onUnchecked:null,containerClass:"ui-checkbox",inputClass:"ui-checkbox-input",checkedClass:"ui-checkbox-checked",disabledClass:"ui-checkbox-disabled"},b),this.el=this.options.el,"input"!==this.el.tagName.toLowerCase()&&console.warn("checkbox error: element passed in instantiation was not an input element"),c.prototype.initialize.call(this,this.options),this.setup()},setup:function(){var a=this.getFormElement();a.kit.classList.add(this.options.inputClass),this._container=this._buildUIElement(this.el),this.isInitChecked=a.checked,this.isInitChecked&&this._container.kit.classList.add(this.options.checkedClass),this.isInitDisabled=a.disabled,this.isInitDisabled&&this._container.kit.classList.add(this.options.disabledClass),this.getUIElement().kit.addEventListener("click","_onClick",this)},_onClick:function(){var a=this.getFormElement();a.disabled||(this.getUIElement().kit.classList.contains(this.options.checkedClass)?this.uncheck():this.check())},_buildUIElement:function(a){return a.kit.appendOuterHtml('<div class="'+this.options.containerClass+'"></div>')},check:function(){var a=this.getFormElement(),b=this.getUIElement();a.checked||(a.checked=!0),b.kit.classList.add(this.options.checkedClass),this.options.onChecked&&this.options.onChecked(a.value,a,b)},uncheck:function(){var a=this.getFormElement(),b=this.getUIElement();a.checked&&(a.checked=!1),b.kit.classList.remove(this.options.checkedClass),this.options.onUnchecked&&this.options.onUnchecked(a.value,a,b)},enable:function(){this.getFormElement().disabled=!1,this.getUIElement().kit.classList.remove(this.options.disabledClass)},disable:function(){this.getFormElement().disabled=!0,this.getUIElement().kit.classList.add(this.options.disabledClass)},getFormElement:function(){return this.el},getUIElement:function(){return this._container},getElementKey:function(){return"checkbox"},destroy:function(){var a=this.getUIElement(),b=this.getFormElement();a.kit.removeEventListener("click","_onClick",this),a.parentNode.replaceChild(b,a),this.isInitChecked&&(b.checked=!0),this.isInitDisabled&&(b.disabled=!0),c.prototype.destroy.call(this)}});var g=function(a){this.initialize(a)};return g.prototype=a.extend({},c.prototype,{initialize:function(b){this.options=a.extend({el:null,onChange:null,onKeyDownChange:null,containerClass:"ui-input-text",inputClass:"ui-input-text-input",disabledClass:"ui-input-text-disabled",activeClass:"ui-input-text-active",placeholderClass:"ui-input-text-placeholder"},b),c.prototype.initialize.call(this,this.options),this.setup()},setup:function(){var a=this.options.el;a.kit.classList.add(this.options.inputClass),this._container=this._buildUIElement(a),this._inputEl=this._container.getElementsByClassName(this.options.inputClass)[0],this.origInputValue=a.value,this.isInitDisabled=a.disabled,this.isInitDisabled&&this._container.kit.classList.add(this.options.disabledClass),this._bindEvents(),this.origInputValue||this.showPlaceholder()},_bindEvents:function(){var a=this.getFormElement();a.kit.addEventListener("focus","_onInputFocus",this),a.kit.addEventListener("blur","_onInputBlur",this),a.kit.addEventListener("change","_onInputValueChange",this),a.kit.addEventListener("keydown","_onInputKeyDown",this)},_unbindEvents:function(){var a=this.getFormElement();a.kit.removeEventListener("focus","_onInputFocus",this),a.kit.removeEventListener("blur","_onInputBlur",this),a.kit.removeEventListener("change","_onInputValueChange",this),a.kit.removeEventListener("keydown","_onInputKeyDown",this)},_onInputKeyDown:function(a){this.keyDownTimeoutId&&clearTimeout(this.keyDownTimeoutId),this.keyDownTimeoutId=setTimeout(this._triggerKeyDownChange.bind(this,a),1)},_triggerKeyDownChange:function(a){this.options.onKeyDownChange&&this.options.onKeyDownChange(this.getValue(),this.getFormElement(),this.getUIElement(),a)},isPlaceholderSupported:function(){var a=b();return!a||8!==a&&9!==a},showPlaceholder:function(){this.isPlaceholderSupported()||(this.getFormElement().value=this.getPlaceholder(),this.getUIElement().kit.classList.add(this.options.placeholderClass))},setValue:function(a){var b=this.getFormElement(),c=b.value;a!==c&&a!==this.getPlaceholder()&&(this.getFormElement().value=a,this._triggerChange())},getValue:function(){return this.getFormElement().value},clearPlaceholder:function(){this.isPlaceholderSupported()||(this.getFormElement().value="",this.getUIElement().kit.classList.remove(this.options.placeholderClass))},_buildUIElement:function(a){return a.kit.appendOuterHtml('<div class="'+this.options.containerClass+'"></div>')},getPlaceholder:function(){var a=this.getFormElement().getAttribute("placeholder");return null===a&&(a=""),a},_onInputFocus:function(){this.getValue()===this.getPlaceholder()&&this.clearPlaceholder(),this.getUIElement().kit.classList.add(this.options.activeClass)},_onInputBlur:function(){this.getValue()||this.showPlaceholder(),this.getUIElement().kit.classList.remove(this.options.activeClass)},_triggerChange:function(a){var b=[this.getValue(),this.getFormElement(),this.getUIElement()];a&&b.push(a),this.options.onChange&&this.options.onChange.apply(this,b)},_onInputValueChange:function(a){this._triggerChange(a)},getFormElement:function(){return this._inputEl},getUIElement:function(){return this._container},enable:function(){this.getFormElement().removeAttribute("disabled"),this.getUIElement().kit.classList.remove(this.options.disabledClass)},disable:function(){this.getFormElement().setAttribute("disabled","true"),this.getUIElement().kit.classList.add(this.options.disabledClass)},getElementKey:function(){return"inputText"},destroy:function(){var a=this.getUIElement(),b=this.getFormElement();this._unbindEvents(),a.parentNode.replaceChild(b,a),this.isInitDisabled&&b.setAttribute("disabled","true"),this.setValue(this.origInputValue),c.prototype.destroy.call(this)}}),d.ButtonToggle=e,d.Checkbox=f,d.InputField=g,d});