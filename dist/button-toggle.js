/** 
* FormJS - v0.1.0.
* https://github.com/mkay581/formjs.git
* Copyright 2014. Licensed MIT.
*/
define(["underscore","./form-element","element-kit"],function(e,t){var n=function(e){this.initialize(e)};return n.prototype=e.extend({},t.prototype,{initialize:function(n){this.options=e.extend({inputs:[],onChange:null,containerClass:"ui-button-toggle",inputClass:"ui-button-toggle-input",selectedClass:"ui-button-toggle-selected",disabledClass:"ui-button-toggle-disabled"},n),t.prototype.initialize.call(this,this.options),this._container=this.options.container,!this.options.inputs.length&&this._container&&(this.options.inputs=this._container.querySelectorAll("input")),this.options.inputs.length?(this._formElements=Array.prototype.slice.call(this.options.inputs),this._UIElements=this._buildUIElements(this._formElements)):console.error("could not build toggle items: no toggle input items were passed"),this.setup()},setup:function(){this._triggerAll(function(e){e.kit.classList.add(this.options.inputClass)}.bind(this)),this._setupEvents()},_setupEvents:function(){this._triggerAll(function(e,t){t.kit.addEventListener("click","_onToggleClick",this)}.bind(this))},getFormElements:function(){return this._formElements},getUIElements:function(){return this._UIElements},_triggerAll:function(e){var t,n=this.getFormElements(),r=this.getUIElements();for(t=0;t<n.length;t++)e(n[t],r[t],t)},_onToggleClick:function(e){var t=e.target,n=t.tagName.toLowerCase()==="input",r=n?t.parentNode:t,i=n?t:r.getElementsByClassName(this.options.inputClass)[0];!n&&(!this.isRadio()||this._lastClickedItem!==r)&&(i.checked?this._onToggleDeselect(i,r):this._onToggleSelect(i,r),this.triggerChange(i,r),this._lastClickedItem=r)},_onToggleSelect:function(e,t){this.isRadio()&&this._triggerAll(function(e,t){t.kit.classList.remove(this.options.selectedClass)}.bind(this)),t.kit.classList.add(this.options.selectedClass)},_onToggleDeselect:function(e,t){t.kit.classList.remove(this.options.selectedClass)},_buildUIElements:function(e){var t=e.length,n=[],r,i,s;for(r=0;r<t;r++)i=e[r],s=i.kit.appendOuterHtml('<div class="'+this.options.containerClass+'"></div>'),i.checked&&s.kit.classList.add(this.options.selectedClass),i.disabled&&s.kit.classList.add(this.options.disabledClass),n.push(s);return n},isRadio:function(){return this.getFormElements()[0].getAttribute("type")==="radio"},triggerChange:function(e,t){this.options.onChange&&this.options.onChange(e.value,e,t)},select:function(e){var t=this.getFormElement(e),n=this.getUIElement(e);t.checked||(t.checked=!0,n.kit.classList.add(this.options.selectedClass),this.triggerChange(t,n)),this.isRadio()&&this._triggerAll(function(e,t,n){e.checked||this.deselect(n)}.bind(this))},getValue:function(){var e=this.getFormElements().filter(function(e){return e.checked},this);return e.length?e[0].value:""},deselect:function(e){var t=this.getFormElement(e),n=this.getUIElement(e);n.kit.classList.remove(this.options.selectedClass),t.checked&&(t.checked=!1,this.triggerChange(t,n))},getFormElement:function(e){return this.getFormElements()[e||0]},getUIElement:function(e){return this.getUIElements()[e||0]},enable:function(){this._triggerAll(function(e,t){e.disabled=!1,t.kit.classList.remove(this.options.disabledClass)}.bind(this))},disable:function(){this._triggerAll(function(e,t){e.disabled=!0,t.kit.classList.add(this.options.disabledClass)}.bind(this))},getElementKey:function(){return this.isRadio()?"buttonToggleRadio":"buttonToggleCheckbox"},destroy:function(){this._triggerAll(function(e,t){t.parentNode.replaceChild(e,t),t.kit.removeEventListener("click","_onToggleClick",this)}.bind(this)),t.prototype.destroy.call(this)}}),n});