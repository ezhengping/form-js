/** 
* FormJS - v0.1.5.
* https://github.com/mkay581/formjs.git
* Copyright 2014. Licensed MIT.
*/
define(["underscore","./form-element","element-kit"],function(a,b){var c=function(a){this.initialize(a)};return c.prototype=a.extend({},b.prototype,{initialize:function(c){this.options=a.extend({inputs:[],onChange:null,containerClass:"ui-button-toggle",inputClass:"ui-button-toggle-input",selectedClass:"ui-button-toggle-selected",disabledClass:"ui-button-toggle-disabled"},c),b.prototype.initialize.call(this,this.options),this._container=this.options.container,!this.options.inputs.length&&this._container&&(this.options.inputs=this._container.querySelectorAll("input")),this.options.inputs.length?(this._formElements=Array.prototype.slice.call(this.options.inputs),this._UIElements=this._buildUIElements(this._formElements)):console.error("could not build toggle items: no toggle input items were passed"),this.setup()},setup:function(){this._triggerAll(function(a){a.kit.classList.add(this.options.inputClass)}.bind(this)),this._setupEvents()},_setupEvents:function(){this._triggerAll(function(a){a.kit.addEventListener("click","_onFormElementClick",this)}.bind(this))},getFormElements:function(){return this._formElements},getUIElements:function(){return this._UIElements},_triggerAll:function(a){var b,c=this.getFormElements(),d=this.getUIElements();for(b=0;b<c.length;b++)a(c[b],d[b],b)},_onFormElementClick:function(a){var b=a.currentTarget.getElementsByClassName(this.options.inputClass)[0],c=a.currentTarget.getElementsByClassName(this.options.containerClass)[0];a.currentTarget===a.target&&(b=a.target,c=a.target.parentElement,this._delegateClick(b,c))},_delegateClick:function(a,b){this.isRadio()?this._processRadioClick(a,b):this._processCheckboxClick(a,b)},_processRadioClick:function(a,b){this._lastRadioClicked!==a&&(this._triggerAll(function(a,b){b.kit.classList.remove(this.options.selectedClass),a.checked=!1}.bind(this)),this._onToggleSelect(a,b),this._lastRadioClicked=a)},_processCheckboxClick:function(a,b){b.kit.classList.contains(this.options.selectedClass)?this._onToggleDeselect(a,b):this._onToggleSelect(a,b)},_onToggleSelect:function(a,b){a.checked=!0,b.kit.classList.add(this.options.selectedClass),this._triggerChange(a,b)},_onToggleDeselect:function(a,b){a.checked=!1,b.kit.classList.remove(this.options.selectedClass),this._triggerChange(a,b)},_buildUIElements:function(a){var b,c,d,e=a.length,f=[];for(b=0;e>b;b++)c=a[b],d=c.kit.appendOuterHtml('<div class="'+this.options.containerClass+'"></div>'),c.checked&&d.kit.classList.add(this.options.selectedClass),c.disabled&&d.kit.classList.add(this.options.disabledClass),f.push(d);return f},isRadio:function(){return"radio"===this.getFormElements()[0].getAttribute("type")},_triggerChange:function(a,b){this.options.onChange&&this.options.onChange(a.value,a,b)},select:function(a){var b=this.getFormElement(a),c=this.getUIElement(a);b.checked||(b.checked=!0,c.kit.classList.add(this.options.selectedClass),this._triggerChange(b,c)),this.isRadio()&&this._triggerAll(function(a,b,c){a.checked||this.deselect(c)}.bind(this))},getValue:function(){var a=this.getFormElements().filter(function(a){return a.checked},this);return a.length?a[0].value:""},deselect:function(a){var b=this.getFormElement(a),c=this.getUIElement(a);c.kit.classList.remove(this.options.selectedClass),b.checked&&(b.checked=!1,this._triggerChange(b,c))},getFormElement:function(a){return this.getFormElements()[a||0]},getUIElement:function(a){return this.getUIElements()[a||0]},enable:function(){this._triggerAll(function(a,b){a.disabled=!1,b.kit.classList.remove(this.options.disabledClass)}.bind(this))},disable:function(){this._triggerAll(function(a,b){a.disabled=!0,b.kit.classList.add(this.options.disabledClass)}.bind(this))},getElementKey:function(){return this.isRadio()?"buttonToggleRadio":"buttonToggleCheckbox"},destroy:function(){this._triggerAll(function(a,b){b.parentNode.replaceChild(a,b),a.addEventListener("click","_onFormElementClick",this)}.bind(this)),b.prototype.destroy.call(this)}}),c});